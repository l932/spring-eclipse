<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	 http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
	 http://www.springframework.org/schema/context 
	 http://www.springframework.org/schema/context/spring-context-3.1.xsd 
	 http://www.springframework.org/schema/aop 
	 http://www.springframework.org/schema/aop/spring-aop-3.1.xsd 
	 http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd 
	 http://www.springframework.org/schema/tx
     http://www.springframework.org/schema/tx/spring-tx-3.1.xsd"
	default-lazy-init="false">
	
	<!-- 启动注解驱动的Spring MVC功能，注册请求url和注解POJO类方法的映射-->
     <!-- 注解请求映射  -->  
    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
     <property name="interceptors">
      <list>
       <bean class="cn.com.cintel.common.inteceptor.SpringInteceptor"></bean>
      </list>
     </property>
    </bean>
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
     <property name="webBindingInitializer">
      <bean class="cn.com.cintel.common.util.MyWebBinding"/>
     </property>
     <property name="messageConverters">
      <list>
       <ref bean="byteArray_hmc" />
       <ref bean="string_hmc" />
       <ref bean="resource_hmc" />
       <ref bean="source_hmc" />
       <ref bean="xmlAwareForm_hmc" />
       <ref bean="jaxb2RootElement_hmc" />
      </list>
     </property>
    </bean>
    <bean id="byteArray_hmc" class="org.springframework.http.converter.ByteArrayHttpMessageConverter" /><!-- 处理.. -->
    <bean id="string_hmc" class="org.springframework.http.converter.StringHttpMessageConverter" /><!-- 处理.. -->
    <bean id="resource_hmc" class="org.springframework.http.converter.ResourceHttpMessageConverter" /><!-- 处理.. -->
    <bean id="source_hmc" class="org.springframework.http.converter.xml.SourceHttpMessageConverter" /><!-- 处理.. -->
    <bean id="xmlAwareForm_hmc" class="org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter" /><!-- 处理.. -->
    <bean id="jaxb2RootElement_hmc" class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter" /><!-- 处理.. -->
      
    <mvc:default-servlet-handler/>
    <!-- 启动包扫描功能，以便注册带有@Controller、@Service、@repository、@Component等注解的类成为spring的bean -->
    <context:component-scan base-package="cn.com.cintel"/>
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
     <property value="/WEB-INF/view/" name="prefix"/>
     <property value=".jsp" name="suffix"/>
    </bean>
	<!-- 数据源、C3P0数据库连接池 -->
     <bean id="dataSourceOracle" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
      <property name="driverClass" value="oracle.jdbc.driver.OracleDriver"/>
      <property name="jdbcUrl" value="jdbc:oracle:thin:@192.168.2.245:1521:MTDC"/>
      <property name="user" value="clw"/>
      <property name="password" value="clw"/>
      <property name="maxPoolSize" value="3"/>
      <property name="minPoolSize" value="1"/>
      <property name="initialPoolSize" value="2"/>
      <property name="acquireIncrement" value="3"/>
      <property name="maxIdleTime" value="60"/>
     </bean>
     
     <!-- 配置其他Hibernate的配置项 -->
	 <bean id="sessionFactoryOracle" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
	  <property name="dataSource" ref="dataSourceOracle" />
	  <property name="packagesToScan" value="cn.com.cintel.common.pojo"/>
	  <property name="hibernateProperties">
	   <props>
	    <prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
	    <prop key="hibernate.show_sql">true</prop>
	    <prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
	    <prop key="hibernate.jdbc.use_scrollable_resultset">true</prop>
	   </props>
	  </property>
	 </bean>
	
	 <bean name="myHibernateTemplateOracle" class="cn.com.cintel.common.MyHibernateTemplateOracle">
	  <property name="sessionFactory" ref="sessionFactoryOracle"/>
	 </bean>

	<bean id="hibernateTransactionManagerOracle"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<qualifier value="htxoracle"/>
		<property name="sessionFactory" ref="sessionFactoryOracle" />
	</bean>
	
	<tx:annotation-driven transaction-manager="hibernateTransactionManagerOracle"/>
	
	<!-- 配置上传文件 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	 <!-- 设置上传文件大小的参数   -->
	 <property name="maxUploadSize" value="1000000"/>
	</bean>
	
	<!-- 配置验证码 -->
	<bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
	 <property name="config">
	  <bean class="com.google.code.kaptcha.util.Config">
	  <constructor-arg>
	   <props>
	    <prop key="kaptcha.border">no</prop><!-- 设置是否有边框 -->
	    <prop key="kaptcha.border.color">105,179,90</prop><!-- 边框颜色 -->
	    <prop key="kaptcha.textproducer.font.color">red</prop><!-- 字体颜色 -->
	    <prop key="kaptcha.image.width">250</prop><!-- 验证码图片宽度 -->
	    <prop key="kaptcha.textproducer.font.size">80</prop><!-- 字体大小 -->
	    <prop key="kaptcha.image.height">90</prop><!-- 图片高度 -->
	    <prop key="kaptcha.session.key">code</prop>
	    <prop key="kaptcha.textproducer.char.length">4</prop><!-- 验证码个数 -->
	    <prop key="kaptcha.textproducer.font.names">宋体</prop><!-- 字体 -->
	   </props>
	  </constructor-arg>
	  </bean>
	 </property>
	</bean>  
	

</beans>
